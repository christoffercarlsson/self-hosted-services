services:
  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: unless-stopped
    volumes:
      - ${BITWARDEN_PATH}:/data
    environment:
      - SIGNUPS_ALLOWED=${BITWARDEN_SIGNUPS_ALLOWED}
      - INVITATIONS_ALLOWED=${BITWARDEN_INVITATIONS_ALLOWED}
    labels:
      - traefik.enable=true
      - traefik.http.routers.bitwarden.entrypoints=websecure
      - traefik.http.routers.bitwarden.rule=Host(`${BITWARDEN_SUBDOMAIN}.${ROOT_DOMAIN}`)
      - traefik.http.routers.bitwarden.tls.certresolver=selfhostedservices

  ddns-updater:
    image: qmcgaw/ddns-updater
    container_name: ddns-updater
    restart: unless-stopped
    volumes:
      - ${DDNS_UPDATER_PATH}:/updater/data
    network_mode: bridge
    environment:
      CONFIG: >-
        {
          "settings": [
            {
              "provider": "njalla",
              "domain": "${ROOT_DOMAIN}",
              "host": "${BITWARDEN_SUBDOMAIN}",
              "key": "${BITWARDEN_DOMAIN_KEY}",
              "ip_version": "ipv4",
              "provider_ip": true
            },
            {
              "provider": "njalla",
              "domain": "${ROOT_DOMAIN}",
              "host": "${JELLYFIN_SUBDOMAIN}",
              "key": "${JELLYFIN_DOMAIN_KEY}",
              "ip_version": "ipv4",
              "provider_ip": true
            },
            {
              "provider": "njalla",
              "domain": "${ROOT_DOMAIN}",
              "host": "${STATUS_SUBDOMAIN}",
              "key": "${STATUS_DOMAIN_KEY}",
              "ip_version": "ipv4",
              "provider_ip": true
            },
            {
              "provider": "njalla",
              "domain": "${ROOT_DOMAIN}",
              "host": "${TRANSLATE_SUBDOMAIN}",
              "key": "${TRANSLATE_DOMAIN_KEY}",
              "ip_version": "ipv4",
              "provider_ip": true
            }
          ]
        }

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    volumes:
      - ${JELLYFIN_CACHE_PATH}:/cache
      - ${JELLYFIN_CONFIG_PATH}:/config
      - ${JELLYFIN_MEDIA_PATH}:/media:ro
    environment:
      - JELLYFIN_PublishedServerUrl=https://${JELLYFIN_SUBDOMAIN}.${ROOT_DOMAIN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`${JELLYFIN_SUBDOMAIN}.${ROOT_DOMAIN}`)
      - traefik.http.routers.jellyfin.tls.certresolver=selfhostedservices
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096

  libretranslate:
    image: libretranslate/libretranslate:latest
    container_name: libretranslate
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.translate.entrypoints=websecure
      - traefik.http.routers.translate.rule=Host(`${TRANSLATE_SUBDOMAIN}.${ROOT_DOMAIN}`)
      - traefik.http.routers.translate.tls.certresolver=selfhostedservices
      - traefik.http.services.translate.loadbalancer.server.port=5000

  traefik:
    image: traefik:v2.8
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.selfhostedservices.acme.tlschallenge=true
      - --certificatesresolvers.selfhostedservices.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.selfhostedservices.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${LETSENCRYPT_PATH}:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - ${STATUS_PATH}:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.status.entrypoints=websecure
      - traefik.http.routers.status.rule=Host(`${STATUS_SUBDOMAIN}.${ROOT_DOMAIN}`)
      - traefik.http.routers.status.tls.certresolver=selfhostedservices

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
