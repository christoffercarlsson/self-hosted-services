services:
  traefik:
    image: traefik:v2.8
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.selfhostedservices.acme.tlschallenge=true
      - --certificatesresolvers.selfhostedservices.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.selfhostedservices.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${LETSENCRYPT_PATH}:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: unless-stopped
    volumes:
      - ${BITWARDEN_PATH}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.bitwarden.entrypoints=websecure
      - traefik.http.routers.bitwarden.rule=Host(`${BITWARDEN_HOSTNAME}`)
      - traefik.http.routers.bitwarden.tls.certresolver=selfhostedservices

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - ${STATUS_PATH}:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.status.entrypoints=websecure
      - traefik.http.routers.status.rule=Host(`${STATUS_HOSTNAME}`)
      - traefik.http.routers.status.tls.certresolver=selfhostedservices

  libretranslate:
    image: libretranslate/libretranslate:latest
    container_name: libretranslate
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.translate.entrypoints=websecure
      - traefik.http.routers.translate.rule=Host(`${TRANSLATE_HOSTNAME}`)
      - traefik.http.routers.translate.tls.certresolver=selfhostedservices
      - traefik.http.services.translate.loadbalancer.server.port=5000

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
